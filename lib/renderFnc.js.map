{"version":3,"sources":["../src/renderFnc.js"],"names":["timeAdd","speed","time","document","querySelector","value","parseInt","renderArray","array","compareArray","canvas","ctx","getContext","fillStyle","strokeStyle","cWidth","width","cHeight","height","clearRect","c1","c2","map","item","index","w","perWidth","h","x","y","fillRect","strokeRect","renderArrayList","arrayList","compareList","timer","i","setInterval","length","clearInterval"],"mappings":";;;;;;;AACA;;AAEA,SAASA,OAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAIC,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACAF,SAAKG,KAAL,GAAaC,SAAUJ,KAAKG,KAAf,IAAyBC,SAAUL,KAAV,CAAtC;AACH;;AAED,SAASM,WAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2C;AACvC,QAAIC,SAASP,SAASC,aAAT,CAAuB,SAAvB,CAAb;AACA,QAAIO,MAAMD,OAAOE,UAAP,CAAkB,IAAlB,CAAV;AACAD,QAAIE,SAAJ,GAAgB,oBAAhB;AACAF,QAAIG,WAAJ,GAAkB,OAAlB;;AAEA,QAAIC,SAASL,OAAOM,KAApB;AACA,QAAIC,UAAUP,OAAOQ,MAArB;AACAP,QAAIQ,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBJ,MAApB,EAA4BE,OAA5B;;AAEA,QAAIG,KAAKX,aAAa,CAAb,CAAT;AACA,QAAIY,KAAKZ,aAAa,CAAb,CAAT;;AAEAD,UAAMc,GAAN,CAAW,UAAEC,IAAF,EAAQC,KAAR,EAAmB;AAC1B,YAAIC,IAAIC,cAAR;AACA,YAAIC,IAAIJ,IAAR;AACA,YAAIK,IAAIH,IAAID,KAAZ;AACA,YAAIK,IAAIZ,UAAUU,CAAlB;;AAEA,YAAIH,SAASJ,EAAT,IAAeI,SAASH,EAA5B,EAAgC;AAC5BV,gBAAIE,SAAJ,GAAgB,oBAAhB;AACH,SAFD,MAEK;AACDF,gBAAIE,SAAJ,GAAgB,oBAAhB;AACH;;AAEDF,YAAImB,QAAJ,CAAcF,CAAd,EAAiBC,CAAjB,EAAoBJ,CAApB,EAAuBE,CAAvB;AACAhB,YAAIoB,UAAJ,CAAgBH,CAAhB,EAAmBC,CAAnB,EAAsBJ,CAAtB,EAAyBE,CAAzB;AACH,KAdD;AAeH;;AAED,SAASK,eAAT,CAA0BC,SAA1B,EAAqCC,WAArC,EAAkD;AAC9C,QAAIC,cAAJ;AAAA,QAAWC,IAAE,CAAb;AACAD,YAAQE,YAAa,YAAW;AAC5B,YAAID,KAAKH,UAAUK,MAAnB,EAA2B;AACvB,gBAAIF,IAAEH,UAAUK,MAAhB,EAAwB;AACpB/B,4BAAa0B,UAAUG,CAAV,CAAb,EAA2BF,YAAYE,CAAZ,CAA3B;AACH,aAFD,MAEM,IAAIA,KAAGH,UAAUK,MAAjB,EAAyB;AAC3B/B,4BAAa0B,UAAUG,IAAE,CAAZ,CAAb,EAA6B,CAAC,CAAC,CAAF,EAAI,CAAC,CAAL,CAA7B;AACH;AACDpC,oBAASC,WAAT;AACAmC;AACH,SARD,MAQK;AACDG,0BAAeJ,KAAf;AACH;AACJ,KAZO,EAYLlC,WAZK,CAAR;AAaH;;QAGG+B,e,GAAAA,e","file":"renderFnc.js","sourcesContent":["\nimport { perWidth, speed } from './init';\n\nfunction timeAdd( speed ){\n    let time = document.querySelector('#time');\n    time.value = parseInt( time.value ) + parseInt( speed );\n}\n\nfunction renderArray( array, compareArray ){\n    let canvas = document.querySelector('#canvas');\n    let ctx = canvas.getContext('2d');\n    ctx.fillStyle = \"rgb(131, 240, 198)\";\n    ctx.strokeStyle = \"black\";\n\n    let cWidth = canvas.width;\n    let cHeight = canvas.height;\n    ctx.clearRect(0, 0, cWidth, cHeight);\n\n    let c1 = compareArray[0];\n    let c2 = compareArray[1];\n\n    array.map( ( item, index ) => {\n        let w = perWidth;\n        let h = item;\n        let x = w * index;\n        let y = cHeight - h;\n\n        if( index == c1 || index == c2 ){\n            ctx.fillStyle = \"rgb(253, 205, 141)\";\n        }else{\n            ctx.fillStyle = \"rgb(131, 240, 198)\";\n        }\n\n        ctx.fillRect( x, y, w, h );\n        ctx.strokeRect( x, y, w, h );\n    } )\n}\n\nfunction renderArrayList( arrayList, compareList ){\n    let timer, i=0 ;\n    timer = setInterval( function (){\n        if( i <= arrayList.length ){\n            if( i<arrayList.length ){\n                renderArray( arrayList[i], compareList[i] );\n            }else if( i==arrayList.length ){\n                renderArray( arrayList[i-1], [-1,-1] );\n            }\n            timeAdd( speed );\n            i++;\n        }else{\n            clearInterval( timer );\n        }\n    }, speed );\n}\n\nexport {\n    renderArrayList\n}"]}